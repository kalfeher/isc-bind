---
  generatedby: "Generated by ansible isc-bind role"
  # firewalld zone which will allow DNS through
  firewalldZone: "public"
  tcp_socket_bind_delay: 'false' # delay bind start until netmanager has started.
  waitfornetmgr:
    - { option: 'After', value: 'network-online.target' }
    - { option: 'Wants', value: 'network-online.target' }
  # options: recursive, primary, secondary
  ServerRole: recursive
  # Directories and files will be set to allow this user read and write access as required
  binduser: named
  # options are bind-dev, bind (stable version), bind-esv (extended support)
  BindRelease: "bind-dev"
  # Basic default paths. Note that paths based on distribution version are found in vars/main.yml.
  # These paths will only apply if no distribution is matched.
  confpath: /etc/named
  datapath: /var/named
  # Log destination
  logpath: /var/log/named
  primary_zone_subdir: pri #subdirectory for storing primary zone files
  secondary_zone_subdir: "{{ primary_zone_subdir }}" #using the primary subdir may make failover operations easier.
  # For all ACL vars Seperate IP address entries with semi colons ';'. Last entry must terminate with a ';'
  version_text: "-- DNS --"
  # If these two vars are left empty only queries will only be possible from the localhost
  ListenV4: "" #"127.0.0.1;"
  ListenV6: "" #"::1;"
  # Statistics interfaces
  ListenStatsV4: "" #"127.0.0.1;"
  ListenStatsV6: "" #"::1;"
  # Interface via which rndc can be received
  ListenrndcV4: "" #"127.0.0.1;"
  ListenrndcV6: "" #"::1;"
  TrustedACL: "" #addresses that will be added to the trusted access control list
  queryclientsACL: "fd01:1:1:1::/64;"
  # Some consumer devices rely on re-binding. May break home network devices.
  # Include RFCs: 1918, 4193,
  re_bind_IP_ACL: "192.168/16; 10/8; 172.16/12; 127/8; 169.254/16; ::1/128; fc00::/7; fe80::/10;"
  re_bind_IP_exception: "" # "example.com"; "example.net". Add domains which may answer with internal IPs.
  re_bind_name_List: "" # "example.com"; "example.net";. Domains which should not be cname'd
  re_bind_name_exceptions: "" # "example.com"; "example.net". domains which can return cnames to the list above (often the same).

  xfer_clients: "" # List of clients allowed to xfr "192.168.0.1; 192.168.10.11; 10.0.20.11; fd01:2:2:2::1;"
  rndc_add_zone: "no" # change to yes to dynamically add zones.
  primary_masters_list: "" # List of addresses for use in also-notify clauses within zones. Will also be used to create ACLs for xfr
        # - {name: 'blue-org', addresses: "fd01:2:2:2::1; 192.168.0.1;"}
        # - {name 'green-org', addresses: "10.10.0.1; 10.200.0.1;"}
  secondary_masters_list: "" # List of addresses for use in masters clauses within zones. Use python list syntax for addresses, do not terminate with ';'
    # - { name: 'yellow-hosting', addresses: ["fd01:3:3:3::1", "192.168.3.1"] }
  tsig_files: #all tsig files you wish to include in config
    - 'catalog-basic'
    - 'example.net'
    - 'example.com'
  default_ttl: 3600
  soa_values:
    serial: "{{ ansible_date_time.epoch }}"
    refresh: 14400
    retry: 28800
    expire: 604800
    minimum: 86400

  zone_file_path: 'templates' # the path to find zone files. Having them outside of the role will prevent role upgrade issues. Also used for per - zone zone statement files.
  conf_file_path: 'templates' # the path to find templated config files. Will not be used for per - zone configs.
  shared_file_path: 'files' # the path to find files which will be shared amongst DNS hosts. This should be local to the ansible runner.
  pri_domains:
    - { name: 'example.net', zonetype: 'dyn', update_policy: "update-policy { grant 'myhost-tsig' zonesub 'ANY'; };" }
    - { name: 'example.com', zonetype: 'static' }
  sec_domains:
    - { name: 'example.info', masters: "fd01:1:1:1::1;" } # masters can contain either IP addresses or the name of a masters list. In this role, a masters list is generated with the secondary_masters_list.
  ## RPZ Vars
  
  key_file: "no"
  rpz_soa_contact: "rpz.localhost"
  rpz_policies: # Manually generated zones.
    - { name: "basic_rpz", updated_by: "manual" }
    - { name: "mozilla_doh_rpz", updated_by: "manual" }
  #rpz_xfr_feed:
    #- { 'name': 'spamhaus', updated_by: "xfr", masters: "127.0.0.2; 127.0.0.3;" }
  short_time:
    five_min: '1,6,11,16,21,26,31,36,41,46,51,56'
    fifteen_min: '1,16,31,46'
  rpz_cron_jobs:
    - { 'name': 'urlhaus', 'cron_label': 'Fetch RPZ from urlhaus.abuse.ch', 'minute': '{{ short_time.fifteen_min }}', 'hour': '*', 'job': 'wget https://urlhaus.abuse.ch/downloads/rpz/ -O {{ datapath }}/rpz/urlhaus.db && rndc reload urlhaus' }

  rpz_soa_values: "{{ soa_values }}"
  # These vars for the basic_rpz policy
  rpz_block_domains:
    - "xxx"
    - "sex"
    - "adult"
    - "mail"
    - "avsvmcloud.com"
    # - "evil.example.net"
  #rpz_block_ns_label:
  #  - "ns1.evil.example.net"
  #rpz_block_ns_ip:
  #  - "32.5.0.0.127"