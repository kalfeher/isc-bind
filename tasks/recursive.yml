---
  - name: Load Recursive specific vars
    include_vars: recursive.yml
  - name: Add bind keys if required. These will only be used the first time BIND starts
    copy:
      src: files/bind.keys.v9_11
      dest: "{{ confpath }}/bind.keys"
      owner: "root"
      group: "{{ bindgroup }}"
      mode: '0644'
    when: key_file == 'yes'
  # Review README for validating the file above
  - name: Add directory for RPZ zone files.
    file:
      path: "{{ datapath }}/rpz"
      state: directory
      owner: "root"
      group: "{{ bindgroup }}"
      mode: '0770'

  - name: Prepare any cron based RPZ feeds
    block:
    - name: Merge static RPZ with cron based feeds
      set_fact:
        rpz_policies: "{{ rpz_policies + [{ 'name': item.name, 'updated_by':'cron' }] }}"
      loop: "{{ rpz_cron_jobs }}"
    - name: Add cron jobs for RPZ feeds
      cron:
        name: "{{item.cron_label}}"
        minute: "{{item.minute}}"
        hour: "{{item.hour}}"
        job: "{{item.job}}"
        state: "present"
        user: "{{binduser}}"
      loop: "{{rpz_cron_jobs}}"
      loop_control:
        label: "{{item.name}}"
    when: rpz_cron_jobs is defined
  - name: Prepare any XFR based RPZ feeds
    block:
    - name: Add XFR feeds to rpz_policies
      set_fact:
        rpz_policies: "{{ rpz_policies + [{ 'name': item.name, 'updated_by': item.updated_by }] }}"
      loop: "{{ rpz_xfr_feed }}"
    when: rpz_xfr_feed is defined

  - name: RPZ policies and files
    block:
    - name: Copy RPZ zone files
      template:
        src: "{{ lookup('first_found', rpz_source) }}"
        dest: "{{ datapath }}/rpz/{{ item.name }}.db"
        owner: "root"
        group: "{{ bindgroup }}"
        backup: yes
        mode: 0640
      vars:
        rpz_source:
          files:
            - "{{ item.name }}.db.j2"
            - "{{ item.name }}.db"
            - basic_rpz.db.j2
          paths:
            - "{{ zone_file_path }}"
            - 'files'
            - 'templates'
      loop: "{{ rpz_policies }}"
      when: item.updated_by == 'manual'
      notify: reconfig isc-bind scl
      register: zone_changes

    - name: Static Zone file changes will cause new serial to be written
      template:
        src: rpz-serial.j2
        dest: "{{ datapath }}/rpz/{{ policy.item.name }}.serial"
        force: yes
        owner: "root"
        group: "{{ bindgroup }}"
        mode: 0640
      when: policy.changed == true
      loop: "{{ zone_changes.results}}"
      loop_control:
        loop_var: policy
        label: policy.item.name

    when: rpz_policies is defined
