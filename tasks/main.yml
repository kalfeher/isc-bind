---
  - name: Install isc-bind repo from COPR
    yum_repository:
      name: "{{ isc_bind_repository.name }}"
      description: "{{ isc_bind_repository.description }}"
      baseurl: "{{ isc_bind_repository.baseurl }}"
      gpgkey: "{{ isc_bind_repository.gpgkey }}"
      gpgcheck: "{{ isc_bind_repository.gpgcheck }}"
      skip_if_unavailable: "{{ isc_bind_repository.skip_if_unavailable }}"
    tags: bind-repo
    # notify: yum-clean-metadata
    # uncomment notify if repo is removed 'state: absent'

  - name: Install isc-bind
    yum:
      name: isc-bind
      state: latest
    tags: isc-bind

  - name: create log directory
    file:
      path: "{{ logpath }}"
      state: directory
      owner: "{{ binduser }}"
      group: "{{ binduser }}"
      mode: 0770

  - name: Add ISC-BIND SCL paths to user profiles.
    lineinfile:
      path: /etc/profile.d/sh.local
      state: present
      line: source scl_source enable isc-bind
      insertafter: EOF

  - name: Set distribution specific paths
    include_vars: "{{ item }}"
    with_first_found:
        - "{{ ansible_os_family }}_{{ ansible_distribution_major_version }}.yml"
        - "{{ ansible_distribution }}.yml"

  - name: Primary Server configuration
    include_tasks: primary.yml
    when: ServerRole == 'primary'

  - name: Secondary Server configuration
    include_tasks: secondary.yml
    when: ServerRole == 'secondary'

  - name: Recursive Server configuration
    include_tasks: recursive.yml
    when: ServerRole == 'recursive'

  - name: Configure BIND Config file based on ServerRole
    template:
      src: "{{ lookup('first_found', configuration_file) }}"
      dest: "{{ confpath }}/named.conf"
      owner: "{{ binduser }}"
      group: "{{ binduser }}"
      backup: yes
    vars:
      configuration_file:
        files:
          - "{{ ServerRole }}-named.conf.j2"
          - named.conf.j2
        paths:
          - "{{ conf_file_path }}"
          - 'templates'
    tags: isc-bind
    notify: reconfig isc-bind scl

  - name: Adjust service file to wait for Network Manager
    ini_file:
      dest: "{{ serviceFile }}"
      section: Unit
      option: "{{ item.option }}"
      value: "{{ item.value }}"
    loop: "{{ waitfornetmgr }}"
    when: tcp_socket_bind_delay == 'true'
    notify: restart isc-bind

  - name: Make sure FirewallD allows DNS through (UDP amd TCP)
    firewalld:
      service: dns
      permanent: yes
      state: enabled
      immediate: yes
      zone: "{{ firewalldZone }}"
    when: ListenV4 != '' or ListenV6 != ''
  - name: Add Statistics channels rules to FirewallD. **This channel is plain HTTP!!**
    firewalld:
      port: 8880/tcp
      permanent: yes
      state: enabled
      immediate: yes
      zone: "{{ firewalldZone }}"
    when: ListenStatsV4 != '' or ListenStatsV6 != ''

  - name: SE Linux rule to allow isc-bind to listen to port 8880 for statistics connections
    seboolean:
      name: nis_enabled
      state: yes
      persistent: yes
    when: ListenStatsV4 != '' or ListenStatsV6 != ''

  - name: Start BIND
    service:
      name: isc-bind-named
      state: started
      enabled: yes
    tags: isc-bind
